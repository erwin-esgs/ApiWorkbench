// <auto-generated />
using ApiWorkbench.Properties;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiWorkbench.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220720124044_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApiWorkbench.Models.BloodPressureRules", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Expression")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuccessEvent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BloodPressureRules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Expression = "( Sistolik <= 120 && Sistolik >= 90 ) && ( Diastolik <= 80 && Diastolik >= 60 )",
                            RuleName = "BP.Normal",
                            SuccessEvent = "Normal"
                        },
                        new
                        {
                            Id = 2,
                            Expression = "Sistolik < 90 && Diastolik < 60",
                            RuleName = "BP.HypoTension",
                            SuccessEvent = "Hypotension"
                        },
                        new
                        {
                            Id = 3,
                            Expression = "Sistolik > 120 && Diastolik > 80",
                            RuleName = "BP.HyperTension",
                            SuccessEvent = "Hypertension"
                        },
                        new
                        {
                            Id = 4,
                            Expression = "Sistolik > 120 || Diastolik > 80",
                            RuleName = "BP.PreHyperTension",
                            SuccessEvent = "Prehypertension"
                        },
                        new
                        {
                            Id = 5,
                            Expression = "Sistolik < 90 || Diastolik < 60",
                            RuleName = "BP.PreHypoTension",
                            SuccessEvent = "Prehypotension"
                        });
                });

            modelBuilder.Entity("ApiWorkbench.Models.EmployeeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ApiWorkbench.Models.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<int>("LastLogin")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            LastLogin = 0,
                            Name = "ADMIN",
                            Password = "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8",
                            Username = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
